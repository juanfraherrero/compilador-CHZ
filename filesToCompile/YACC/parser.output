Gramática

    0 $accept: programa $end

    1 programa: '{' sentencias '}'

    2 sentencias: sentencia sentencias
    3           | ε

    4 sentencia: declarativa
    5          | ejecutable

    6 declarativa: tipo lista_de_variables ','
    7            | VOID IDENTIFICADOR '(' parametro ')' '{' cuerpo_de_la_funcion '}' ','
    8            | declaracion_clase ','
    9            | declaracion_objeto ','

   10 declaracion_clase: CLASS IDENTIFICADOR '{' lista_de_atributos lista_de_metodos '}'
   11                  | CLASS IDENTIFICADOR

   12 lista_de_atributos: tipo IDENTIFICADOR ',' lista_de_atributos
   13                   | ε

   14 lista_de_metodos: metodo lista_de_metodos
   15                 | ε

   16 metodo: VOID IDENTIFICADOR '(' parametro ')' '{' cuerpo_de_la_funcion '}' ','

   17 declaracion_objeto: IDENTIFICADOR lista_de_objetos ','

   18 lista_de_objetos: IDENTIFICADOR ';' lista_de_objetos
   19                 | IDENTIFICADOR

   20 tipo: SHORT
   21     | UINT
   22     | FLOAT

   23 lista_de_variables: lista_de_variables ';' IDENTIFICADOR
   24                   | IDENTIFICADOR

   25 parametro: tipo IDENTIFICADOR
   26          | ε

   27 cuerpo_de_la_funcion: sentencia cuerpo_de_la_funcion
   28                     | RETURN ','

   29 ejecutable: asignacion
   30           | invocacion
   31           | seleccion
   32           | PRINT CADENA_CARACTERES ','
   33           | ciclo_while
   34           | acceso_objeto

   35 asignacion: IDENTIFICADOR '=' expresion_aritmetica ','

   36 invocacion: IDENTIFICADOR '(' expresion_aritmetica ')' ','
   37           | IDENTIFICADOR '(' ')' ','

   38 expresion_aritmetica: expresion_aritmetica '+' termino
   39                     | expresion_aritmetica '-' termino
   40                     | termino

   41 termino: termino '*' factor
   42        | termino '/' factor
   43        | factor

   44 factor: IDENTIFICADOR
   45       | IDENTIFICADOR OPERADOR_SUMA_SUMA
   46       | constante
   47       | TOF '(' expresion_aritmetica ')'

   48 seleccion: IF '(' condicion ')' bloque_ejecutables ELSE bloque_ejecutables END_IF ','
   49          | IF '(' condicion ')' bloque_ejecutables END_IF ','

   50 ciclo_while: WHILE '(' condicion ')' DO bloque_ejecutables ','

   51 condicion: expresion_aritmetica '>' expresion_aritmetica
   52          | expresion_aritmetica '<' expresion_aritmetica
   53          | expresion_aritmetica COMPARADOR_IGUAL_IGUAL expresion_aritmetica
   54          | expresion_aritmetica COMPARADOR_DISTINTO expresion_aritmetica
   55          | expresion_aritmetica COMPARADOR_MAYOR_IGUAL expresion_aritmetica
   56          | expresion_aritmetica COMPARADOR_MENOR_IGUAL expresion_aritmetica

   57 bloque_ejecutables: '{' sentencias_ejecutables '}'
   58                   | ejecutable

   59 sentencias_ejecutables: ejecutable sentencias_ejecutables
   60                       | ejecutable

   61 constante: ENTERO_SIN_SIGNO
   62          | ENTERO_CORTO
   63          | PUNTO_FLOTANTE
   64          | CADENA_CARACTERES

   65 acceso_objeto: IDENTIFICADOR '.' IDENTIFICADOR '=' expresion_aritmetica ','
   66              | IDENTIFICADOR '.' IDENTIFICADOR '=' IDENTIFICADOR '.' IDENTIFICADOR ','
   67              | IDENTIFICADOR '.' IDENTIFICADOR '(' parametro ')' ','


Terminales con las reglas donde aparecen

    $end (0) 0
    '(' (40) 7 16 36 37 47 48 49 50 67
    ')' (41) 7 16 36 37 47 48 49 50 67
    '*' (42) 41
    '+' (43) 38
    ',' (44) 6 7 8 9 12 16 17 28 32 35 36 37 48 49 50 65 66 67
    '-' (45) 39
    '.' (46) 65 66 67
    '/' (47) 42
    ';' (59) 18 23
    '<' (60) 52
    '=' (61) 35 65 66
    '>' (62) 51
    '{' (123) 1 7 10 16 57
    '}' (125) 1 7 10 16 57
    error (256)
    IDENTIFICADOR (258) 7 10 11 12 16 17 18 19 23 24 25 35 36 37 44 45 65 66 67
    ENTERO_SIN_SIGNO (259) 61
    ENTERO_CORTO (260) 62
    PUNTO_FLOTANTE (261) 63
    CADENA_CARACTERES (262) 32 64
    COMPARADOR_IGUAL_IGUAL (263) 53
    COMPARADOR_DISTINTO (264) 54
    COMPARADOR_MENOR_IGUAL (265) 56
    COMPARADOR_MAYOR_IGUAL (266) 55
    OPERADOR_SUMA_SUMA (267) 45
    VOID (268) 7 16
    RETURN (269) 28
    IF (270) 48 49
    ELSE (271) 48
    END_IF (272) 48 49
    PRINT (273) 32
    WHILE (274) 50
    DO (275) 50
    SHORT (276) 20
    UINT (277) 21
    FLOAT (278) 22
    TOF (279) 47
    CLASS (280) 10 11


No terminales con las reglas donde aparecen

    $accept (40)
        on left: 0
    programa (41)
        on left: 1
        on right: 0
    sentencias (42)
        on left: 2 3
        on right: 1 2
    sentencia (43)
        on left: 4 5
        on right: 2 27
    declarativa (44)
        on left: 6 7 8 9
        on right: 4
    declaracion_clase (45)
        on left: 10 11
        on right: 8
    lista_de_atributos (46)
        on left: 12 13
        on right: 10 12
    lista_de_metodos (47)
        on left: 14 15
        on right: 10 14
    metodo (48)
        on left: 16
        on right: 14
    declaracion_objeto (49)
        on left: 17
        on right: 9
    lista_de_objetos (50)
        on left: 18 19
        on right: 17 18
    tipo (51)
        on left: 20 21 22
        on right: 6 12 25
    lista_de_variables (52)
        on left: 23 24
        on right: 6 23
    parametro (53)
        on left: 25 26
        on right: 7 16 67
    cuerpo_de_la_funcion (54)
        on left: 27 28
        on right: 7 16 27
    ejecutable (55)
        on left: 29 30 31 32 33 34
        on right: 5 58 59 60
    asignacion (56)
        on left: 35
        on right: 29
    invocacion (57)
        on left: 36 37
        on right: 30
    expresion_aritmetica (58)
        on left: 38 39 40
        on right: 35 36 38 39 47 51 52 53 54 55 56 65
    termino (59)
        on left: 41 42 43
        on right: 38 39 40 41 42
    factor (60)
        on left: 44 45 46 47
        on right: 41 42 43
    seleccion (61)
        on left: 48 49
        on right: 31
    ciclo_while (62)
        on left: 50
        on right: 33
    condicion (63)
        on left: 51 52 53 54 55 56
        on right: 48 49 50
    bloque_ejecutables (64)
        on left: 57 58
        on right: 48 49 50
    sentencias_ejecutables (65)
        on left: 59 60
        on right: 57 59
    constante (66)
        on left: 61 62 63 64
        on right: 46
    acceso_objeto (67)
        on left: 65 66 67
        on right: 34


Estado 0

    0 $accept: • programa $end

    '{'  desplazar e ir al estado 1

    programa  ir al estado 2


Estado 1

    1 programa: '{' • sentencias '}'

    IDENTIFICADOR  desplazar e ir al estado 3
    VOID           desplazar e ir al estado 4
    IF             desplazar e ir al estado 5
    PRINT          desplazar e ir al estado 6
    WHILE          desplazar e ir al estado 7
    SHORT          desplazar e ir al estado 8
    UINT           desplazar e ir al estado 9
    FLOAT          desplazar e ir al estado 10
    CLASS          desplazar e ir al estado 11

    $default  reduce usando la regla 3 (sentencias)

    sentencias          ir al estado 12
    sentencia           ir al estado 13
    declarativa         ir al estado 14
    declaracion_clase   ir al estado 15
    declaracion_objeto  ir al estado 16
    tipo                ir al estado 17
    ejecutable          ir al estado 18
    asignacion          ir al estado 19
    invocacion          ir al estado 20
    seleccion           ir al estado 21
    ciclo_while         ir al estado 22
    acceso_objeto       ir al estado 23


Estado 2

    0 $accept: programa • $end

    $end  desplazar e ir al estado 24


Estado 3

   17 declaracion_objeto: IDENTIFICADOR • lista_de_objetos ','
   35 asignacion: IDENTIFICADOR • '=' expresion_aritmetica ','
   36 invocacion: IDENTIFICADOR • '(' expresion_aritmetica ')' ','
   37           | IDENTIFICADOR • '(' ')' ','
   65 acceso_objeto: IDENTIFICADOR • '.' IDENTIFICADOR '=' expresion_aritmetica ','
   66              | IDENTIFICADOR • '.' IDENTIFICADOR '=' IDENTIFICADOR '.' IDENTIFICADOR ','
   67              | IDENTIFICADOR • '.' IDENTIFICADOR '(' parametro ')' ','

    IDENTIFICADOR  desplazar e ir al estado 25
    '('            desplazar e ir al estado 26
    '='            desplazar e ir al estado 27
    '.'            desplazar e ir al estado 28

    lista_de_objetos  ir al estado 29


Estado 4

    7 declarativa: VOID • IDENTIFICADOR '(' parametro ')' '{' cuerpo_de_la_funcion '}' ','

    IDENTIFICADOR  desplazar e ir al estado 30


Estado 5

   48 seleccion: IF • '(' condicion ')' bloque_ejecutables ELSE bloque_ejecutables END_IF ','
   49          | IF • '(' condicion ')' bloque_ejecutables END_IF ','

    '('  desplazar e ir al estado 31


Estado 6

   32 ejecutable: PRINT • CADENA_CARACTERES ','

    CADENA_CARACTERES  desplazar e ir al estado 32


Estado 7

   50 ciclo_while: WHILE • '(' condicion ')' DO bloque_ejecutables ','

    '('  desplazar e ir al estado 33


Estado 8

   20 tipo: SHORT •

    $default  reduce usando la regla 20 (tipo)


Estado 9

   21 tipo: UINT •

    $default  reduce usando la regla 21 (tipo)


Estado 10

   22 tipo: FLOAT •

    $default  reduce usando la regla 22 (tipo)


Estado 11

   10 declaracion_clase: CLASS • IDENTIFICADOR '{' lista_de_atributos lista_de_metodos '}'
   11                  | CLASS • IDENTIFICADOR

    IDENTIFICADOR  desplazar e ir al estado 34


Estado 12

    1 programa: '{' sentencias • '}'

    '}'  desplazar e ir al estado 35


Estado 13

    2 sentencias: sentencia • sentencias

    IDENTIFICADOR  desplazar e ir al estado 3
    VOID           desplazar e ir al estado 4
    IF             desplazar e ir al estado 5
    PRINT          desplazar e ir al estado 6
    WHILE          desplazar e ir al estado 7
    SHORT          desplazar e ir al estado 8
    UINT           desplazar e ir al estado 9
    FLOAT          desplazar e ir al estado 10
    CLASS          desplazar e ir al estado 11

    $default  reduce usando la regla 3 (sentencias)

    sentencias          ir al estado 36
    sentencia           ir al estado 13
    declarativa         ir al estado 14
    declaracion_clase   ir al estado 15
    declaracion_objeto  ir al estado 16
    tipo                ir al estado 17
    ejecutable          ir al estado 18
    asignacion          ir al estado 19
    invocacion          ir al estado 20
    seleccion           ir al estado 21
    ciclo_while         ir al estado 22
    acceso_objeto       ir al estado 23


Estado 14

    4 sentencia: declarativa •

    $default  reduce usando la regla 4 (sentencia)


Estado 15

    8 declarativa: declaracion_clase • ','

    ','  desplazar e ir al estado 37


Estado 16

    9 declarativa: declaracion_objeto • ','

    ','  desplazar e ir al estado 38


Estado 17

    6 declarativa: tipo • lista_de_variables ','

    IDENTIFICADOR  desplazar e ir al estado 39

    lista_de_variables  ir al estado 40


Estado 18

    5 sentencia: ejecutable •

    $default  reduce usando la regla 5 (sentencia)


Estado 19

   29 ejecutable: asignacion •

    $default  reduce usando la regla 29 (ejecutable)


Estado 20

   30 ejecutable: invocacion •

    $default  reduce usando la regla 30 (ejecutable)


Estado 21

   31 ejecutable: seleccion •

    $default  reduce usando la regla 31 (ejecutable)


Estado 22

   33 ejecutable: ciclo_while •

    $default  reduce usando la regla 33 (ejecutable)


Estado 23

   34 ejecutable: acceso_objeto •

    $default  reduce usando la regla 34 (ejecutable)


Estado 24

    0 $accept: programa $end •

    $default  aceptar


Estado 25

   18 lista_de_objetos: IDENTIFICADOR • ';' lista_de_objetos
   19                 | IDENTIFICADOR •

    ';'  desplazar e ir al estado 41

    $default  reduce usando la regla 19 (lista_de_objetos)


Estado 26

   36 invocacion: IDENTIFICADOR '(' • expresion_aritmetica ')' ','
   37           | IDENTIFICADOR '(' • ')' ','

    IDENTIFICADOR      desplazar e ir al estado 42
    ENTERO_SIN_SIGNO   desplazar e ir al estado 43
    ENTERO_CORTO       desplazar e ir al estado 44
    PUNTO_FLOTANTE     desplazar e ir al estado 45
    CADENA_CARACTERES  desplazar e ir al estado 46
    TOF                desplazar e ir al estado 47
    ')'                desplazar e ir al estado 48

    expresion_aritmetica  ir al estado 49
    termino               ir al estado 50
    factor                ir al estado 51
    constante             ir al estado 52


Estado 27

   35 asignacion: IDENTIFICADOR '=' • expresion_aritmetica ','

    IDENTIFICADOR      desplazar e ir al estado 42
    ENTERO_SIN_SIGNO   desplazar e ir al estado 43
    ENTERO_CORTO       desplazar e ir al estado 44
    PUNTO_FLOTANTE     desplazar e ir al estado 45
    CADENA_CARACTERES  desplazar e ir al estado 46
    TOF                desplazar e ir al estado 47

    expresion_aritmetica  ir al estado 53
    termino               ir al estado 50
    factor                ir al estado 51
    constante             ir al estado 52


Estado 28

   65 acceso_objeto: IDENTIFICADOR '.' • IDENTIFICADOR '=' expresion_aritmetica ','
   66              | IDENTIFICADOR '.' • IDENTIFICADOR '=' IDENTIFICADOR '.' IDENTIFICADOR ','
   67              | IDENTIFICADOR '.' • IDENTIFICADOR '(' parametro ')' ','

    IDENTIFICADOR  desplazar e ir al estado 54


Estado 29

   17 declaracion_objeto: IDENTIFICADOR lista_de_objetos • ','

    ','  desplazar e ir al estado 55


Estado 30

    7 declarativa: VOID IDENTIFICADOR • '(' parametro ')' '{' cuerpo_de_la_funcion '}' ','

    '('  desplazar e ir al estado 56


Estado 31

   48 seleccion: IF '(' • condicion ')' bloque_ejecutables ELSE bloque_ejecutables END_IF ','
   49          | IF '(' • condicion ')' bloque_ejecutables END_IF ','

    IDENTIFICADOR      desplazar e ir al estado 42
    ENTERO_SIN_SIGNO   desplazar e ir al estado 43
    ENTERO_CORTO       desplazar e ir al estado 44
    PUNTO_FLOTANTE     desplazar e ir al estado 45
    CADENA_CARACTERES  desplazar e ir al estado 46
    TOF                desplazar e ir al estado 47

    expresion_aritmetica  ir al estado 57
    termino               ir al estado 50
    factor                ir al estado 51
    condicion             ir al estado 58
    constante             ir al estado 52


Estado 32

   32 ejecutable: PRINT CADENA_CARACTERES • ','

    ','  desplazar e ir al estado 59


Estado 33

   50 ciclo_while: WHILE '(' • condicion ')' DO bloque_ejecutables ','

    IDENTIFICADOR      desplazar e ir al estado 42
    ENTERO_SIN_SIGNO   desplazar e ir al estado 43
    ENTERO_CORTO       desplazar e ir al estado 44
    PUNTO_FLOTANTE     desplazar e ir al estado 45
    CADENA_CARACTERES  desplazar e ir al estado 46
    TOF                desplazar e ir al estado 47

    expresion_aritmetica  ir al estado 57
    termino               ir al estado 50
    factor                ir al estado 51
    condicion             ir al estado 60
    constante             ir al estado 52


Estado 34

   10 declaracion_clase: CLASS IDENTIFICADOR • '{' lista_de_atributos lista_de_metodos '}'
   11                  | CLASS IDENTIFICADOR •

    '{'  desplazar e ir al estado 61

    $default  reduce usando la regla 11 (declaracion_clase)


Estado 35

    1 programa: '{' sentencias '}' •

    $default  reduce usando la regla 1 (programa)


Estado 36

    2 sentencias: sentencia sentencias •

    $default  reduce usando la regla 2 (sentencias)


Estado 37

    8 declarativa: declaracion_clase ',' •

    $default  reduce usando la regla 8 (declarativa)


Estado 38

    9 declarativa: declaracion_objeto ',' •

    $default  reduce usando la regla 9 (declarativa)


Estado 39

   24 lista_de_variables: IDENTIFICADOR •

    $default  reduce usando la regla 24 (lista_de_variables)


Estado 40

    6 declarativa: tipo lista_de_variables • ','
   23 lista_de_variables: lista_de_variables • ';' IDENTIFICADOR

    ','  desplazar e ir al estado 62
    ';'  desplazar e ir al estado 63


Estado 41

   18 lista_de_objetos: IDENTIFICADOR ';' • lista_de_objetos

    IDENTIFICADOR  desplazar e ir al estado 25

    lista_de_objetos  ir al estado 64


Estado 42

   44 factor: IDENTIFICADOR •
   45       | IDENTIFICADOR • OPERADOR_SUMA_SUMA

    OPERADOR_SUMA_SUMA  desplazar e ir al estado 65

    $default  reduce usando la regla 44 (factor)


Estado 43

   61 constante: ENTERO_SIN_SIGNO •

    $default  reduce usando la regla 61 (constante)


Estado 44

   62 constante: ENTERO_CORTO •

    $default  reduce usando la regla 62 (constante)


Estado 45

   63 constante: PUNTO_FLOTANTE •

    $default  reduce usando la regla 63 (constante)


Estado 46

   64 constante: CADENA_CARACTERES •

    $default  reduce usando la regla 64 (constante)


Estado 47

   47 factor: TOF • '(' expresion_aritmetica ')'

    '('  desplazar e ir al estado 66


Estado 48

   37 invocacion: IDENTIFICADOR '(' ')' • ','

    ','  desplazar e ir al estado 67


Estado 49

   36 invocacion: IDENTIFICADOR '(' expresion_aritmetica • ')' ','
   38 expresion_aritmetica: expresion_aritmetica • '+' termino
   39                     | expresion_aritmetica • '-' termino

    ')'  desplazar e ir al estado 68
    '+'  desplazar e ir al estado 69
    '-'  desplazar e ir al estado 70


Estado 50

   40 expresion_aritmetica: termino •
   41 termino: termino • '*' factor
   42        | termino • '/' factor

    '*'  desplazar e ir al estado 71
    '/'  desplazar e ir al estado 72

    $default  reduce usando la regla 40 (expresion_aritmetica)


Estado 51

   43 termino: factor •

    $default  reduce usando la regla 43 (termino)


Estado 52

   46 factor: constante •

    $default  reduce usando la regla 46 (factor)


Estado 53

   35 asignacion: IDENTIFICADOR '=' expresion_aritmetica • ','
   38 expresion_aritmetica: expresion_aritmetica • '+' termino
   39                     | expresion_aritmetica • '-' termino

    ','  desplazar e ir al estado 73
    '+'  desplazar e ir al estado 69
    '-'  desplazar e ir al estado 70


Estado 54

   65 acceso_objeto: IDENTIFICADOR '.' IDENTIFICADOR • '=' expresion_aritmetica ','
   66              | IDENTIFICADOR '.' IDENTIFICADOR • '=' IDENTIFICADOR '.' IDENTIFICADOR ','
   67              | IDENTIFICADOR '.' IDENTIFICADOR • '(' parametro ')' ','

    '('  desplazar e ir al estado 74
    '='  desplazar e ir al estado 75


Estado 55

   17 declaracion_objeto: IDENTIFICADOR lista_de_objetos ',' •

    $default  reduce usando la regla 17 (declaracion_objeto)


Estado 56

    7 declarativa: VOID IDENTIFICADOR '(' • parametro ')' '{' cuerpo_de_la_funcion '}' ','

    SHORT  desplazar e ir al estado 8
    UINT   desplazar e ir al estado 9
    FLOAT  desplazar e ir al estado 10

    $default  reduce usando la regla 26 (parametro)

    tipo       ir al estado 76
    parametro  ir al estado 77


Estado 57

   38 expresion_aritmetica: expresion_aritmetica • '+' termino
   39                     | expresion_aritmetica • '-' termino
   51 condicion: expresion_aritmetica • '>' expresion_aritmetica
   52          | expresion_aritmetica • '<' expresion_aritmetica
   53          | expresion_aritmetica • COMPARADOR_IGUAL_IGUAL expresion_aritmetica
   54          | expresion_aritmetica • COMPARADOR_DISTINTO expresion_aritmetica
   55          | expresion_aritmetica • COMPARADOR_MAYOR_IGUAL expresion_aritmetica
   56          | expresion_aritmetica • COMPARADOR_MENOR_IGUAL expresion_aritmetica

    COMPARADOR_IGUAL_IGUAL  desplazar e ir al estado 78
    COMPARADOR_DISTINTO     desplazar e ir al estado 79
    COMPARADOR_MENOR_IGUAL  desplazar e ir al estado 80
    COMPARADOR_MAYOR_IGUAL  desplazar e ir al estado 81
    '+'                     desplazar e ir al estado 69
    '-'                     desplazar e ir al estado 70
    '>'                     desplazar e ir al estado 82
    '<'                     desplazar e ir al estado 83


Estado 58

   48 seleccion: IF '(' condicion • ')' bloque_ejecutables ELSE bloque_ejecutables END_IF ','
   49          | IF '(' condicion • ')' bloque_ejecutables END_IF ','

    ')'  desplazar e ir al estado 84


Estado 59

   32 ejecutable: PRINT CADENA_CARACTERES ',' •

    $default  reduce usando la regla 32 (ejecutable)


Estado 60

   50 ciclo_while: WHILE '(' condicion • ')' DO bloque_ejecutables ','

    ')'  desplazar e ir al estado 85


Estado 61

   10 declaracion_clase: CLASS IDENTIFICADOR '{' • lista_de_atributos lista_de_metodos '}'

    SHORT  desplazar e ir al estado 8
    UINT   desplazar e ir al estado 9
    FLOAT  desplazar e ir al estado 10

    $default  reduce usando la regla 13 (lista_de_atributos)

    lista_de_atributos  ir al estado 86
    tipo                ir al estado 87


Estado 62

    6 declarativa: tipo lista_de_variables ',' •

    $default  reduce usando la regla 6 (declarativa)


Estado 63

   23 lista_de_variables: lista_de_variables ';' • IDENTIFICADOR

    IDENTIFICADOR  desplazar e ir al estado 88


Estado 64

   18 lista_de_objetos: IDENTIFICADOR ';' lista_de_objetos •

    $default  reduce usando la regla 18 (lista_de_objetos)


Estado 65

   45 factor: IDENTIFICADOR OPERADOR_SUMA_SUMA •

    $default  reduce usando la regla 45 (factor)


Estado 66

   47 factor: TOF '(' • expresion_aritmetica ')'

    IDENTIFICADOR      desplazar e ir al estado 42
    ENTERO_SIN_SIGNO   desplazar e ir al estado 43
    ENTERO_CORTO       desplazar e ir al estado 44
    PUNTO_FLOTANTE     desplazar e ir al estado 45
    CADENA_CARACTERES  desplazar e ir al estado 46
    TOF                desplazar e ir al estado 47

    expresion_aritmetica  ir al estado 89
    termino               ir al estado 50
    factor                ir al estado 51
    constante             ir al estado 52


Estado 67

   37 invocacion: IDENTIFICADOR '(' ')' ',' •

    $default  reduce usando la regla 37 (invocacion)


Estado 68

   36 invocacion: IDENTIFICADOR '(' expresion_aritmetica ')' • ','

    ','  desplazar e ir al estado 90


Estado 69

   38 expresion_aritmetica: expresion_aritmetica '+' • termino

    IDENTIFICADOR      desplazar e ir al estado 42
    ENTERO_SIN_SIGNO   desplazar e ir al estado 43
    ENTERO_CORTO       desplazar e ir al estado 44
    PUNTO_FLOTANTE     desplazar e ir al estado 45
    CADENA_CARACTERES  desplazar e ir al estado 46
    TOF                desplazar e ir al estado 47

    termino    ir al estado 91
    factor     ir al estado 51
    constante  ir al estado 52


Estado 70

   39 expresion_aritmetica: expresion_aritmetica '-' • termino

    IDENTIFICADOR      desplazar e ir al estado 42
    ENTERO_SIN_SIGNO   desplazar e ir al estado 43
    ENTERO_CORTO       desplazar e ir al estado 44
    PUNTO_FLOTANTE     desplazar e ir al estado 45
    CADENA_CARACTERES  desplazar e ir al estado 46
    TOF                desplazar e ir al estado 47

    termino    ir al estado 92
    factor     ir al estado 51
    constante  ir al estado 52


Estado 71

   41 termino: termino '*' • factor

    IDENTIFICADOR      desplazar e ir al estado 42
    ENTERO_SIN_SIGNO   desplazar e ir al estado 43
    ENTERO_CORTO       desplazar e ir al estado 44
    PUNTO_FLOTANTE     desplazar e ir al estado 45
    CADENA_CARACTERES  desplazar e ir al estado 46
    TOF                desplazar e ir al estado 47

    factor     ir al estado 93
    constante  ir al estado 52


Estado 72

   42 termino: termino '/' • factor

    IDENTIFICADOR      desplazar e ir al estado 42
    ENTERO_SIN_SIGNO   desplazar e ir al estado 43
    ENTERO_CORTO       desplazar e ir al estado 44
    PUNTO_FLOTANTE     desplazar e ir al estado 45
    CADENA_CARACTERES  desplazar e ir al estado 46
    TOF                desplazar e ir al estado 47

    factor     ir al estado 94
    constante  ir al estado 52


Estado 73

   35 asignacion: IDENTIFICADOR '=' expresion_aritmetica ',' •

    $default  reduce usando la regla 35 (asignacion)


Estado 74

   67 acceso_objeto: IDENTIFICADOR '.' IDENTIFICADOR '(' • parametro ')' ','

    SHORT  desplazar e ir al estado 8
    UINT   desplazar e ir al estado 9
    FLOAT  desplazar e ir al estado 10

    $default  reduce usando la regla 26 (parametro)

    tipo       ir al estado 76
    parametro  ir al estado 95


Estado 75

   65 acceso_objeto: IDENTIFICADOR '.' IDENTIFICADOR '=' • expresion_aritmetica ','
   66              | IDENTIFICADOR '.' IDENTIFICADOR '=' • IDENTIFICADOR '.' IDENTIFICADOR ','

    IDENTIFICADOR      desplazar e ir al estado 96
    ENTERO_SIN_SIGNO   desplazar e ir al estado 43
    ENTERO_CORTO       desplazar e ir al estado 44
    PUNTO_FLOTANTE     desplazar e ir al estado 45
    CADENA_CARACTERES  desplazar e ir al estado 46
    TOF                desplazar e ir al estado 47

    expresion_aritmetica  ir al estado 97
    termino               ir al estado 50
    factor                ir al estado 51
    constante             ir al estado 52


Estado 76

   25 parametro: tipo • IDENTIFICADOR

    IDENTIFICADOR  desplazar e ir al estado 98


Estado 77

    7 declarativa: VOID IDENTIFICADOR '(' parametro • ')' '{' cuerpo_de_la_funcion '}' ','

    ')'  desplazar e ir al estado 99


Estado 78

   53 condicion: expresion_aritmetica COMPARADOR_IGUAL_IGUAL • expresion_aritmetica

    IDENTIFICADOR      desplazar e ir al estado 42
    ENTERO_SIN_SIGNO   desplazar e ir al estado 43
    ENTERO_CORTO       desplazar e ir al estado 44
    PUNTO_FLOTANTE     desplazar e ir al estado 45
    CADENA_CARACTERES  desplazar e ir al estado 46
    TOF                desplazar e ir al estado 47

    expresion_aritmetica  ir al estado 100
    termino               ir al estado 50
    factor                ir al estado 51
    constante             ir al estado 52


Estado 79

   54 condicion: expresion_aritmetica COMPARADOR_DISTINTO • expresion_aritmetica

    IDENTIFICADOR      desplazar e ir al estado 42
    ENTERO_SIN_SIGNO   desplazar e ir al estado 43
    ENTERO_CORTO       desplazar e ir al estado 44
    PUNTO_FLOTANTE     desplazar e ir al estado 45
    CADENA_CARACTERES  desplazar e ir al estado 46
    TOF                desplazar e ir al estado 47

    expresion_aritmetica  ir al estado 101
    termino               ir al estado 50
    factor                ir al estado 51
    constante             ir al estado 52


Estado 80

   56 condicion: expresion_aritmetica COMPARADOR_MENOR_IGUAL • expresion_aritmetica

    IDENTIFICADOR      desplazar e ir al estado 42
    ENTERO_SIN_SIGNO   desplazar e ir al estado 43
    ENTERO_CORTO       desplazar e ir al estado 44
    PUNTO_FLOTANTE     desplazar e ir al estado 45
    CADENA_CARACTERES  desplazar e ir al estado 46
    TOF                desplazar e ir al estado 47

    expresion_aritmetica  ir al estado 102
    termino               ir al estado 50
    factor                ir al estado 51
    constante             ir al estado 52


Estado 81

   55 condicion: expresion_aritmetica COMPARADOR_MAYOR_IGUAL • expresion_aritmetica

    IDENTIFICADOR      desplazar e ir al estado 42
    ENTERO_SIN_SIGNO   desplazar e ir al estado 43
    ENTERO_CORTO       desplazar e ir al estado 44
    PUNTO_FLOTANTE     desplazar e ir al estado 45
    CADENA_CARACTERES  desplazar e ir al estado 46
    TOF                desplazar e ir al estado 47

    expresion_aritmetica  ir al estado 103
    termino               ir al estado 50
    factor                ir al estado 51
    constante             ir al estado 52


Estado 82

   51 condicion: expresion_aritmetica '>' • expresion_aritmetica

    IDENTIFICADOR      desplazar e ir al estado 42
    ENTERO_SIN_SIGNO   desplazar e ir al estado 43
    ENTERO_CORTO       desplazar e ir al estado 44
    PUNTO_FLOTANTE     desplazar e ir al estado 45
    CADENA_CARACTERES  desplazar e ir al estado 46
    TOF                desplazar e ir al estado 47

    expresion_aritmetica  ir al estado 104
    termino               ir al estado 50
    factor                ir al estado 51
    constante             ir al estado 52


Estado 83

   52 condicion: expresion_aritmetica '<' • expresion_aritmetica

    IDENTIFICADOR      desplazar e ir al estado 42
    ENTERO_SIN_SIGNO   desplazar e ir al estado 43
    ENTERO_CORTO       desplazar e ir al estado 44
    PUNTO_FLOTANTE     desplazar e ir al estado 45
    CADENA_CARACTERES  desplazar e ir al estado 46
    TOF                desplazar e ir al estado 47

    expresion_aritmetica  ir al estado 105
    termino               ir al estado 50
    factor                ir al estado 51
    constante             ir al estado 52


Estado 84

   48 seleccion: IF '(' condicion ')' • bloque_ejecutables ELSE bloque_ejecutables END_IF ','
   49          | IF '(' condicion ')' • bloque_ejecutables END_IF ','

    IDENTIFICADOR  desplazar e ir al estado 106
    IF             desplazar e ir al estado 5
    PRINT          desplazar e ir al estado 6
    WHILE          desplazar e ir al estado 7
    '{'            desplazar e ir al estado 107

    ejecutable          ir al estado 108
    asignacion          ir al estado 19
    invocacion          ir al estado 20
    seleccion           ir al estado 21
    ciclo_while         ir al estado 22
    bloque_ejecutables  ir al estado 109
    acceso_objeto       ir al estado 23


Estado 85

   50 ciclo_while: WHILE '(' condicion ')' • DO bloque_ejecutables ','

    DO  desplazar e ir al estado 110


Estado 86

   10 declaracion_clase: CLASS IDENTIFICADOR '{' lista_de_atributos • lista_de_metodos '}'

    VOID  desplazar e ir al estado 111

    $default  reduce usando la regla 15 (lista_de_metodos)

    lista_de_metodos  ir al estado 112
    metodo            ir al estado 113


Estado 87

   12 lista_de_atributos: tipo • IDENTIFICADOR ',' lista_de_atributos

    IDENTIFICADOR  desplazar e ir al estado 114


Estado 88

   23 lista_de_variables: lista_de_variables ';' IDENTIFICADOR •

    $default  reduce usando la regla 23 (lista_de_variables)


Estado 89

   38 expresion_aritmetica: expresion_aritmetica • '+' termino
   39                     | expresion_aritmetica • '-' termino
   47 factor: TOF '(' expresion_aritmetica • ')'

    ')'  desplazar e ir al estado 115
    '+'  desplazar e ir al estado 69
    '-'  desplazar e ir al estado 70


Estado 90

   36 invocacion: IDENTIFICADOR '(' expresion_aritmetica ')' ',' •

    $default  reduce usando la regla 36 (invocacion)


Estado 91

   38 expresion_aritmetica: expresion_aritmetica '+' termino •
   41 termino: termino • '*' factor
   42        | termino • '/' factor

    '*'  desplazar e ir al estado 71
    '/'  desplazar e ir al estado 72

    $default  reduce usando la regla 38 (expresion_aritmetica)


Estado 92

   39 expresion_aritmetica: expresion_aritmetica '-' termino •
   41 termino: termino • '*' factor
   42        | termino • '/' factor

    '*'  desplazar e ir al estado 71
    '/'  desplazar e ir al estado 72

    $default  reduce usando la regla 39 (expresion_aritmetica)


Estado 93

   41 termino: termino '*' factor •

    $default  reduce usando la regla 41 (termino)


Estado 94

   42 termino: termino '/' factor •

    $default  reduce usando la regla 42 (termino)


Estado 95

   67 acceso_objeto: IDENTIFICADOR '.' IDENTIFICADOR '(' parametro • ')' ','

    ')'  desplazar e ir al estado 116


Estado 96

   44 factor: IDENTIFICADOR •
   45       | IDENTIFICADOR • OPERADOR_SUMA_SUMA
   66 acceso_objeto: IDENTIFICADOR '.' IDENTIFICADOR '=' IDENTIFICADOR • '.' IDENTIFICADOR ','

    OPERADOR_SUMA_SUMA  desplazar e ir al estado 65
    '.'                 desplazar e ir al estado 117

    $default  reduce usando la regla 44 (factor)


Estado 97

   38 expresion_aritmetica: expresion_aritmetica • '+' termino
   39                     | expresion_aritmetica • '-' termino
   65 acceso_objeto: IDENTIFICADOR '.' IDENTIFICADOR '=' expresion_aritmetica • ','

    ','  desplazar e ir al estado 118
    '+'  desplazar e ir al estado 69
    '-'  desplazar e ir al estado 70


Estado 98

   25 parametro: tipo IDENTIFICADOR •

    $default  reduce usando la regla 25 (parametro)


Estado 99

    7 declarativa: VOID IDENTIFICADOR '(' parametro ')' • '{' cuerpo_de_la_funcion '}' ','

    '{'  desplazar e ir al estado 119


Estado 100

   38 expresion_aritmetica: expresion_aritmetica • '+' termino
   39                     | expresion_aritmetica • '-' termino
   53 condicion: expresion_aritmetica COMPARADOR_IGUAL_IGUAL expresion_aritmetica •

    '+'  desplazar e ir al estado 69
    '-'  desplazar e ir al estado 70

    $default  reduce usando la regla 53 (condicion)


Estado 101

   38 expresion_aritmetica: expresion_aritmetica • '+' termino
   39                     | expresion_aritmetica • '-' termino
   54 condicion: expresion_aritmetica COMPARADOR_DISTINTO expresion_aritmetica •

    '+'  desplazar e ir al estado 69
    '-'  desplazar e ir al estado 70

    $default  reduce usando la regla 54 (condicion)


Estado 102

   38 expresion_aritmetica: expresion_aritmetica • '+' termino
   39                     | expresion_aritmetica • '-' termino
   56 condicion: expresion_aritmetica COMPARADOR_MENOR_IGUAL expresion_aritmetica •

    '+'  desplazar e ir al estado 69
    '-'  desplazar e ir al estado 70

    $default  reduce usando la regla 56 (condicion)


Estado 103

   38 expresion_aritmetica: expresion_aritmetica • '+' termino
   39                     | expresion_aritmetica • '-' termino
   55 condicion: expresion_aritmetica COMPARADOR_MAYOR_IGUAL expresion_aritmetica •

    '+'  desplazar e ir al estado 69
    '-'  desplazar e ir al estado 70

    $default  reduce usando la regla 55 (condicion)


Estado 104

   38 expresion_aritmetica: expresion_aritmetica • '+' termino
   39                     | expresion_aritmetica • '-' termino
   51 condicion: expresion_aritmetica '>' expresion_aritmetica •

    '+'  desplazar e ir al estado 69
    '-'  desplazar e ir al estado 70

    $default  reduce usando la regla 51 (condicion)


Estado 105

   38 expresion_aritmetica: expresion_aritmetica • '+' termino
   39                     | expresion_aritmetica • '-' termino
   52 condicion: expresion_aritmetica '<' expresion_aritmetica •

    '+'  desplazar e ir al estado 69
    '-'  desplazar e ir al estado 70

    $default  reduce usando la regla 52 (condicion)


Estado 106

   35 asignacion: IDENTIFICADOR • '=' expresion_aritmetica ','
   36 invocacion: IDENTIFICADOR • '(' expresion_aritmetica ')' ','
   37           | IDENTIFICADOR • '(' ')' ','
   65 acceso_objeto: IDENTIFICADOR • '.' IDENTIFICADOR '=' expresion_aritmetica ','
   66              | IDENTIFICADOR • '.' IDENTIFICADOR '=' IDENTIFICADOR '.' IDENTIFICADOR ','
   67              | IDENTIFICADOR • '.' IDENTIFICADOR '(' parametro ')' ','

    '('  desplazar e ir al estado 26
    '='  desplazar e ir al estado 27
    '.'  desplazar e ir al estado 28


Estado 107

   57 bloque_ejecutables: '{' • sentencias_ejecutables '}'

    IDENTIFICADOR  desplazar e ir al estado 106
    IF             desplazar e ir al estado 5
    PRINT          desplazar e ir al estado 6
    WHILE          desplazar e ir al estado 7

    ejecutable              ir al estado 120
    asignacion              ir al estado 19
    invocacion              ir al estado 20
    seleccion               ir al estado 21
    ciclo_while             ir al estado 22
    sentencias_ejecutables  ir al estado 121
    acceso_objeto           ir al estado 23


Estado 108

   58 bloque_ejecutables: ejecutable •

    $default  reduce usando la regla 58 (bloque_ejecutables)


Estado 109

   48 seleccion: IF '(' condicion ')' bloque_ejecutables • ELSE bloque_ejecutables END_IF ','
   49          | IF '(' condicion ')' bloque_ejecutables • END_IF ','

    ELSE    desplazar e ir al estado 122
    END_IF  desplazar e ir al estado 123


Estado 110

   50 ciclo_while: WHILE '(' condicion ')' DO • bloque_ejecutables ','

    IDENTIFICADOR  desplazar e ir al estado 106
    IF             desplazar e ir al estado 5
    PRINT          desplazar e ir al estado 6
    WHILE          desplazar e ir al estado 7
    '{'            desplazar e ir al estado 107

    ejecutable          ir al estado 108
    asignacion          ir al estado 19
    invocacion          ir al estado 20
    seleccion           ir al estado 21
    ciclo_while         ir al estado 22
    bloque_ejecutables  ir al estado 124
    acceso_objeto       ir al estado 23


Estado 111

   16 metodo: VOID • IDENTIFICADOR '(' parametro ')' '{' cuerpo_de_la_funcion '}' ','

    IDENTIFICADOR  desplazar e ir al estado 125


Estado 112

   10 declaracion_clase: CLASS IDENTIFICADOR '{' lista_de_atributos lista_de_metodos • '}'

    '}'  desplazar e ir al estado 126


Estado 113

   14 lista_de_metodos: metodo • lista_de_metodos

    VOID  desplazar e ir al estado 111

    $default  reduce usando la regla 15 (lista_de_metodos)

    lista_de_metodos  ir al estado 127
    metodo            ir al estado 113


Estado 114

   12 lista_de_atributos: tipo IDENTIFICADOR • ',' lista_de_atributos

    ','  desplazar e ir al estado 128


Estado 115

   47 factor: TOF '(' expresion_aritmetica ')' •

    $default  reduce usando la regla 47 (factor)


Estado 116

   67 acceso_objeto: IDENTIFICADOR '.' IDENTIFICADOR '(' parametro ')' • ','

    ','  desplazar e ir al estado 129


Estado 117

   66 acceso_objeto: IDENTIFICADOR '.' IDENTIFICADOR '=' IDENTIFICADOR '.' • IDENTIFICADOR ','

    IDENTIFICADOR  desplazar e ir al estado 130


Estado 118

   65 acceso_objeto: IDENTIFICADOR '.' IDENTIFICADOR '=' expresion_aritmetica ',' •

    $default  reduce usando la regla 65 (acceso_objeto)


Estado 119

    7 declarativa: VOID IDENTIFICADOR '(' parametro ')' '{' • cuerpo_de_la_funcion '}' ','

    IDENTIFICADOR  desplazar e ir al estado 3
    VOID           desplazar e ir al estado 4
    RETURN         desplazar e ir al estado 131
    IF             desplazar e ir al estado 5
    PRINT          desplazar e ir al estado 6
    WHILE          desplazar e ir al estado 7
    SHORT          desplazar e ir al estado 8
    UINT           desplazar e ir al estado 9
    FLOAT          desplazar e ir al estado 10
    CLASS          desplazar e ir al estado 11

    sentencia             ir al estado 132
    declarativa           ir al estado 14
    declaracion_clase     ir al estado 15
    declaracion_objeto    ir al estado 16
    tipo                  ir al estado 17
    cuerpo_de_la_funcion  ir al estado 133
    ejecutable            ir al estado 18
    asignacion            ir al estado 19
    invocacion            ir al estado 20
    seleccion             ir al estado 21
    ciclo_while           ir al estado 22
    acceso_objeto         ir al estado 23


Estado 120

   59 sentencias_ejecutables: ejecutable • sentencias_ejecutables
   60                       | ejecutable •

    IDENTIFICADOR  desplazar e ir al estado 106
    IF             desplazar e ir al estado 5
    PRINT          desplazar e ir al estado 6
    WHILE          desplazar e ir al estado 7

    $default  reduce usando la regla 60 (sentencias_ejecutables)

    ejecutable              ir al estado 120
    asignacion              ir al estado 19
    invocacion              ir al estado 20
    seleccion               ir al estado 21
    ciclo_while             ir al estado 22
    sentencias_ejecutables  ir al estado 134
    acceso_objeto           ir al estado 23


Estado 121

   57 bloque_ejecutables: '{' sentencias_ejecutables • '}'

    '}'  desplazar e ir al estado 135


Estado 122

   48 seleccion: IF '(' condicion ')' bloque_ejecutables ELSE • bloque_ejecutables END_IF ','

    IDENTIFICADOR  desplazar e ir al estado 106
    IF             desplazar e ir al estado 5
    PRINT          desplazar e ir al estado 6
    WHILE          desplazar e ir al estado 7
    '{'            desplazar e ir al estado 107

    ejecutable          ir al estado 108
    asignacion          ir al estado 19
    invocacion          ir al estado 20
    seleccion           ir al estado 21
    ciclo_while         ir al estado 22
    bloque_ejecutables  ir al estado 136
    acceso_objeto       ir al estado 23


Estado 123

   49 seleccion: IF '(' condicion ')' bloque_ejecutables END_IF • ','

    ','  desplazar e ir al estado 137


Estado 124

   50 ciclo_while: WHILE '(' condicion ')' DO bloque_ejecutables • ','

    ','  desplazar e ir al estado 138


Estado 125

   16 metodo: VOID IDENTIFICADOR • '(' parametro ')' '{' cuerpo_de_la_funcion '}' ','

    '('  desplazar e ir al estado 139


Estado 126

   10 declaracion_clase: CLASS IDENTIFICADOR '{' lista_de_atributos lista_de_metodos '}' •

    $default  reduce usando la regla 10 (declaracion_clase)


Estado 127

   14 lista_de_metodos: metodo lista_de_metodos •

    $default  reduce usando la regla 14 (lista_de_metodos)


Estado 128

   12 lista_de_atributos: tipo IDENTIFICADOR ',' • lista_de_atributos

    SHORT  desplazar e ir al estado 8
    UINT   desplazar e ir al estado 9
    FLOAT  desplazar e ir al estado 10

    $default  reduce usando la regla 13 (lista_de_atributos)

    lista_de_atributos  ir al estado 140
    tipo                ir al estado 87


Estado 129

   67 acceso_objeto: IDENTIFICADOR '.' IDENTIFICADOR '(' parametro ')' ',' •

    $default  reduce usando la regla 67 (acceso_objeto)


Estado 130

   66 acceso_objeto: IDENTIFICADOR '.' IDENTIFICADOR '=' IDENTIFICADOR '.' IDENTIFICADOR • ','

    ','  desplazar e ir al estado 141


Estado 131

   28 cuerpo_de_la_funcion: RETURN • ','

    ','  desplazar e ir al estado 142


Estado 132

   27 cuerpo_de_la_funcion: sentencia • cuerpo_de_la_funcion

    IDENTIFICADOR  desplazar e ir al estado 3
    VOID           desplazar e ir al estado 4
    RETURN         desplazar e ir al estado 131
    IF             desplazar e ir al estado 5
    PRINT          desplazar e ir al estado 6
    WHILE          desplazar e ir al estado 7
    SHORT          desplazar e ir al estado 8
    UINT           desplazar e ir al estado 9
    FLOAT          desplazar e ir al estado 10
    CLASS          desplazar e ir al estado 11

    sentencia             ir al estado 132
    declarativa           ir al estado 14
    declaracion_clase     ir al estado 15
    declaracion_objeto    ir al estado 16
    tipo                  ir al estado 17
    cuerpo_de_la_funcion  ir al estado 143
    ejecutable            ir al estado 18
    asignacion            ir al estado 19
    invocacion            ir al estado 20
    seleccion             ir al estado 21
    ciclo_while           ir al estado 22
    acceso_objeto         ir al estado 23


Estado 133

    7 declarativa: VOID IDENTIFICADOR '(' parametro ')' '{' cuerpo_de_la_funcion • '}' ','

    '}'  desplazar e ir al estado 144


Estado 134

   59 sentencias_ejecutables: ejecutable sentencias_ejecutables •

    $default  reduce usando la regla 59 (sentencias_ejecutables)


Estado 135

   57 bloque_ejecutables: '{' sentencias_ejecutables '}' •

    $default  reduce usando la regla 57 (bloque_ejecutables)


Estado 136

   48 seleccion: IF '(' condicion ')' bloque_ejecutables ELSE bloque_ejecutables • END_IF ','

    END_IF  desplazar e ir al estado 145


Estado 137

   49 seleccion: IF '(' condicion ')' bloque_ejecutables END_IF ',' •

    $default  reduce usando la regla 49 (seleccion)


Estado 138

   50 ciclo_while: WHILE '(' condicion ')' DO bloque_ejecutables ',' •

    $default  reduce usando la regla 50 (ciclo_while)


Estado 139

   16 metodo: VOID IDENTIFICADOR '(' • parametro ')' '{' cuerpo_de_la_funcion '}' ','

    SHORT  desplazar e ir al estado 8
    UINT   desplazar e ir al estado 9
    FLOAT  desplazar e ir al estado 10

    $default  reduce usando la regla 26 (parametro)

    tipo       ir al estado 76
    parametro  ir al estado 146


Estado 140

   12 lista_de_atributos: tipo IDENTIFICADOR ',' lista_de_atributos •

    $default  reduce usando la regla 12 (lista_de_atributos)


Estado 141

   66 acceso_objeto: IDENTIFICADOR '.' IDENTIFICADOR '=' IDENTIFICADOR '.' IDENTIFICADOR ',' •

    $default  reduce usando la regla 66 (acceso_objeto)


Estado 142

   28 cuerpo_de_la_funcion: RETURN ',' •

    $default  reduce usando la regla 28 (cuerpo_de_la_funcion)


Estado 143

   27 cuerpo_de_la_funcion: sentencia cuerpo_de_la_funcion •

    $default  reduce usando la regla 27 (cuerpo_de_la_funcion)


Estado 144

    7 declarativa: VOID IDENTIFICADOR '(' parametro ')' '{' cuerpo_de_la_funcion '}' • ','

    ','  desplazar e ir al estado 147


Estado 145

   48 seleccion: IF '(' condicion ')' bloque_ejecutables ELSE bloque_ejecutables END_IF • ','

    ','  desplazar e ir al estado 148


Estado 146

   16 metodo: VOID IDENTIFICADOR '(' parametro • ')' '{' cuerpo_de_la_funcion '}' ','

    ')'  desplazar e ir al estado 149


Estado 147

    7 declarativa: VOID IDENTIFICADOR '(' parametro ')' '{' cuerpo_de_la_funcion '}' ',' •

    $default  reduce usando la regla 7 (declarativa)


Estado 148

   48 seleccion: IF '(' condicion ')' bloque_ejecutables ELSE bloque_ejecutables END_IF ',' •

    $default  reduce usando la regla 48 (seleccion)


Estado 149

   16 metodo: VOID IDENTIFICADOR '(' parametro ')' • '{' cuerpo_de_la_funcion '}' ','

    '{'  desplazar e ir al estado 150


Estado 150

   16 metodo: VOID IDENTIFICADOR '(' parametro ')' '{' • cuerpo_de_la_funcion '}' ','

    IDENTIFICADOR  desplazar e ir al estado 3
    VOID           desplazar e ir al estado 4
    RETURN         desplazar e ir al estado 131
    IF             desplazar e ir al estado 5
    PRINT          desplazar e ir al estado 6
    WHILE          desplazar e ir al estado 7
    SHORT          desplazar e ir al estado 8
    UINT           desplazar e ir al estado 9
    FLOAT          desplazar e ir al estado 10
    CLASS          desplazar e ir al estado 11

    sentencia             ir al estado 132
    declarativa           ir al estado 14
    declaracion_clase     ir al estado 15
    declaracion_objeto    ir al estado 16
    tipo                  ir al estado 17
    cuerpo_de_la_funcion  ir al estado 151
    ejecutable            ir al estado 18
    asignacion            ir al estado 19
    invocacion            ir al estado 20
    seleccion             ir al estado 21
    ciclo_while           ir al estado 22
    acceso_objeto         ir al estado 23


Estado 151

   16 metodo: VOID IDENTIFICADOR '(' parametro ')' '{' cuerpo_de_la_funcion • '}' ','

    '}'  desplazar e ir al estado 152


Estado 152

   16 metodo: VOID IDENTIFICADOR '(' parametro ')' '{' cuerpo_de_la_funcion '}' • ','

    ','  desplazar e ir al estado 153


Estado 153

   16 metodo: VOID IDENTIFICADOR '(' parametro ')' '{' cuerpo_de_la_funcion '}' ',' •

    $default  reduce usando la regla 16 (metodo)
